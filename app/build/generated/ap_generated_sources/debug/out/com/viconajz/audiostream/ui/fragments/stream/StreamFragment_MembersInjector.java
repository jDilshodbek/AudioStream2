// Generated by Dagger (https://google.github.io/dagger).
package com.viconajz.audiostream.ui.fragments.stream;

import dagger.MembersInjector;
import javax.inject.Provider;

public final class StreamFragment_MembersInjector implements MembersInjector<StreamFragment> {
  private final Provider<IStreamContract.Presenter> mPresenterProvider;

  public StreamFragment_MembersInjector(Provider<IStreamContract.Presenter> mPresenterProvider) {
    this.mPresenterProvider = mPresenterProvider;
  }

  public static MembersInjector<StreamFragment> create(
      Provider<IStreamContract.Presenter> mPresenterProvider) {
    return new StreamFragment_MembersInjector(mPresenterProvider);
  }

  @Override
  public void injectMembers(StreamFragment instance) {
    injectMPresenter(instance, mPresenterProvider.get());
  }

  public static void injectMPresenter(
      StreamFragment instance, IStreamContract.Presenter mPresenter) {
    instance.mPresenter = mPresenter;
  }
}
