// Generated by Dagger (https://google.github.io/dagger).
package com.viconajz.audiostream.ui.fragments.main;

import dagger.MembersInjector;
import javax.inject.Provider;

public final class MainFragment_MembersInjector implements MembersInjector<MainFragment> {
  private final Provider<IMainContract.Presenter> mPresenterProvider;

  public MainFragment_MembersInjector(Provider<IMainContract.Presenter> mPresenterProvider) {
    this.mPresenterProvider = mPresenterProvider;
  }

  public static MembersInjector<MainFragment> create(
      Provider<IMainContract.Presenter> mPresenterProvider) {
    return new MainFragment_MembersInjector(mPresenterProvider);
  }

  @Override
  public void injectMembers(MainFragment instance) {
    injectMPresenter(instance, mPresenterProvider.get());
  }

  public static void injectMPresenter(MainFragment instance, IMainContract.Presenter mPresenter) {
    instance.mPresenter = mPresenter;
  }
}
